pwd_policy{
#backup the config file
log "${BLUE}Creating a backup of /etc/pam.d/common-password ${NC}"
cp /etc/pam.d/common-password /etc/pam.d/common-password.bak
if [ $? -ne 0 ]; then
    echo "${RED}Failed to create a backup  ${NC}" 
    echo "Failed to create a backup " > report.txt
else
    echo "${GREEN}Successfully created a backup${NC}" 
    echo "Successfully created a backup" > report.txt
fi


#add "minlen=8"
log "${BLUE}Setting minimum length 8 ${NC}"
sed -i '/^password.*\[success=/ s/$/ minlen=8/' /etc/pam.d/common-password
if [ $? -ne 0 ]; then
    echo "${RED}Failed to edit /etc/pam.d/common-password${NC}" 
    echo "Failed to edit /etc/pam.d/common-password" > report.txt
else
    echo "${GREEN}Successfully updated $/etc/pam.d/common-password{NC}" 
    echo "Successfully updated /etc/pam.d/common-password" > report.txt
fi



#install password quality checking library
log "${BLUE}installing libpam-pwquality ${NC}"
apt install -y libpam-pwquality
if [ $? -ne 0 ]; then
    echo "${RED}Failed to install libpam-pwquality ${NC}" 
    echo "Failed to install libpam-pwquality" > report.txt
else
    echo "${GREEN}Successfully installed libpam-pwquality ${NC}" 
    echo "Successfully uinstalled libpam-pwquality " > report.txt
fi


# set requirement for at least one uppercase (ucredit) at least one lowercase (lcredit), at least one digit (dcredit) and at least one special char (ocredit)
log "${BLUE}Setting password complexity requirements (uppercase, lowercase, digit, and special char${NC}"
sed -i '/^password.*requisite/ s/pam_deny.so/pam_pwquality.so retry=3 lcredit=-1 ucredit=-1 dcredit=-1 ocredit=-1/' /etc/pam.d/common-password
if [ $? -ne 0 ]; then
    echo "${RED}Failed to edit /etc/pam.d/common-password ${NC}" 
    echo "Failed to edit /etc/pam.d/common-password" > report.txt
else
    echo "${GREEN}Successfully updated /etc/pam.d/common-password${NC}" 
    echo "Successfully updated /etc/pam.d/common-password" > report.txt
fi



# set password expiry time to ~6 months and the warning period before deadline to 2 weeks
log "${BLUE}Setting password expiry to ~6 months ${NC}"
sed -i '/^PASS_MAX_DAYS/ s/^.*$/PASS_MAX_DAYS   185/' /etc/login.defs
sed -i '/^PASS_WARN_AGE/ s/^.*$/PASS_WARN_AGE   30/' /etc/login.defs
if [ $? -ne 0 ]; then
    echo "${RED}Failed to edit /etc/login.defs${NC}" 
    echo "Failed to edit /etc/login.defs" > report.txt
else
    echo "${GREEN}Successfully updated /etc/login.defs${NC}" 
    echo "Successfully updated /etc/login.defs" > report.txt
fi


#Forbid previous 5 passwords reuse
log "${BLUE}Setting anti password reuse policy ${NC}"
sed -i '/^password.*\[success=/ s/$/ remember=5/' /etc/pam.d/common-password
if [ $? -ne 0 ]; then
    echo "${RED}Failed edit ${NC}" 
    echo "Failed to edit " > report.txt
else
    echo "${GREEN}Successfully updated ${NC}" 
    echo "Successfully updated " > report.txt
fi


}