pwd_policy () {
    log "${BLUE}COnfiguring password policy ${NC}"
#backup the config file
log "${BLUE}Creating a backup of /etc/pam.d/common-password ${NC}"
cp /etc/pam.d/common-password /etc/pam.d/common-password.bak >> "$LOG_FILE" 2>&1
if [ $? -ne 0 ]; then
    log "${BLUE}Failed to create a backup: ${RED}FAILED ${NC}" 
    echo -e "${BLUE}Failed to create a backup: ${RED}FAILED ${NC}" >> report.txt
else
    log "${BLUE}Successfully created a backup: ${GREEN}DONE ${NC}" 
    echo -e "${BLUE}Successfully created a backup: ${GREEN}DONE ${NC}" >> report.txt
fi


#add "minlen=8"
log "${BLUE}Setting minimum length 8 ${NC}"
sed -i '/^password.*\[success=/ s/$/ minlen=8/' /etc/pam.d/common-password >> "$LOG_FILE" 2>&1
if [ $? -ne 0 ]; then
    log "${RED}Failed to edit /etc/pam.d/common-password$: ${RED}FAILED ${NC}" 
    echo -e "${BLUE}Failed to edit /etc/pam.d/common-password: ${RED}FAILED ${NC}" >> report.txt
else
    log "${BLUE}Successfully updated $/etc/pam.d/common-password ${NC}" 
    echo -e "${BLUE}Successfully updated /etc/pam.d/common-password: ${GREEN}DONE ${NC}" >> report.txt
fi

# set requirement for at least one uppercase (ucredit) at least one lowercase (lcredit), at least one digit (dcredit) and at least one special char (ocredit)
log "${BLUE}Setting password complexity requirements (uppercase, lowercase, digit, and special char ${NC}"
sed -i '/^password.*requisite/ s/pam_deny.so/pam_pwquality.so retry=3 lcredit=-1 ucredit=-1 dcredit=-1 ocredit=-1/' /etc/pam.d/common-password >> "$LOG_FILE" 2>&1
if [ $? -ne 0 ]; then
    log "${BLUE}Failed to edit /etc/pam.d/common-password: ${RED}FAILED ${NC}" 
    echo -e "${BLUE}Failed to edit /etc/pam.d/common-password: ${RED}FAILED ${NC}" >> report.txt
else
    log "${BLUE}Successfully updated /etc/pam.d/common-password: ${GREEN}DONE ${NC}" 
    echo -e "${BLUE}Successfully updated /etc/pam.d/common-password: ${GREEN}DONE ${NC}" >> report.txt
fi

# set password expiry time to ~6 months and the warning period before deadline to 2 weeks
log "${BLUE}Setting password expiry to ~6 months ${NC}"
sed -i '/^PASS_MAX_DAYS/ s/^.*$/PASS_MAX_DAYS   185/' /etc/login.defs >> "$LOG_FILE" 2>&1
sed -i '/^PASS_WARN_AGE/ s/^.*$/PASS_WARN_AGE   30/' /etc/login.defs >> "$LOG_FILE" 2>&1
if [ $? -ne 0 ]; then
    log "${BLUE}Failed to edit /etc/login.defs: ${RED}FAILED ${NC}" 
    echo -e "${BLUE}Failed to edit /etc/login.defs: ${RED}FAILED ${NC}" >> report.txt
else
    log "${BLUE}Successfully updated /etc/login.defs: ${GREEN}DONE ${NC}" 
    echo -e "${BLUE}Successfully updated /etc/login.defs: ${GREEN}DONE ${NC}" >> report.txt
fi


#Forbid previous 5 passwords reuse
log "${BLUE}Setting anti password reuse policy ${NC}"
sed -i '/^password.*\[success=/ s/$/ remember=5/' /etc/pam.d/common-password >> "$LOG_FILE" 2>&1
if [ $? -ne 0 ]; then
    log "${RED}Failed edit ${NC}" 
    echo -e "${RED}Failed to edit " >> report.txt
else
    echo "${GREEN}Successfully updated ${NC}" 
    echo "Successfully updated " >> report.txt
    log "${BLUE}Successfully updated anti password reuse: ${GREEN}DONE ${NC}" 
    echo -e "${BLUE}Successfully updated anti password reuse: ${GREEN}DONE ${NC}" >> report.txt
fi
}